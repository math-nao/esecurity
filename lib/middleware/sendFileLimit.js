/*! * ESecurity * Copyright(c) 2011 Mathieu Naouache * MIT Licensed */ /** * Middleware dependencies. */var poolModule = require('generic-pool');module.exports = function(opts) {        	opts = opts || {};	opts.name || 'nsecurity_sendfile'	opts.max = opts.max || 500;	opts.idleTimeoutMillis = opts.idleTimeoutMillis || 10E3;	opts.reapIntervalMillis = opts.reapIntervalMillis || 1E3;	opts.priorityRange = opts.priorityRange || 1;	opts.log = opts.log || false;	        var pool = poolModule.Pool({        name: opts.name,        create: function(callback) {            callback(null, {});        },        destroy: function(client) { },        max: opts.max,        idleTimeoutMillis: opts.idleTimeoutMillis,        reapIntervalMillis: opts.reapIntervalMillis,        priorityRange: opts.priorityRange,        log: opts.log    });		return function sendFilePool(req, res, next){	  // self-awareness	  if (req._esecurity_sendFileLimit)	    return next();	  	  req._esecurity_sendFileLimit = true;	 	  var oldSendFile = req.sendFile;	  	  req.sendFile = function (path, options, fn) {	    	  	if ('function' == typeof options) {	  		fn = options;	  		options = {};	  	}	  		  	pool.acquire(function (err, client) {	  		oldSendFile.call(this, path, options, function() {	  			pool.release(client);	  			('function' == typeof fn) && fn.apply(this, arguments);	  		});	  	}.bind(this));	  }	  next();	};};